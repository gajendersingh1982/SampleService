#!/usr/bin/env groovy

pipeline {
    agent any
    tools {
        maven 'apache-maven-3.6.0'
        jdk 'Java 1.8'
    }
    options {
        timestamps()
        disableConcurrentBuilds()
        buildDiscarder logRotator(artifactNumToKeepStr: '', numToKeepStr: '2')
    }
    parameters {
        string defaultValue: 'GalaxyAppsShortUrl-AWS.git', description: '', name: 'REPO', trim: true
        string defaultValue: 'sprint13', description: '', name: 'BRANCH', trim: true
        string defaultValue: 'tf-virginia-dev-gb-was', description: '', name: 'AMI_NAME', trim: true
        string defaultValue: 'GalaxyAppShortUrl-Sprint13-SNAPSHOT.war', description: '', name: 'WAR_NAME', trim: true
    }
    environment {
        GIT_URL_SSH = "git@git.samsungmtv.com:c_s-mountainview"
        AWS_CREDS = credentials('AWS_badgedev')
        AWS_ACCESS_KEY_ID="${AWS_CREDS_USR}"
        AWS_SECRET_ACCESS_KEY="${AWS_CREDS_PSW}"
        AWS_DEFAULT_REGION="us-east-1"
    }
    stages {
        stage('Cleanup') {
            steps {
                cleanWs()
            }
        }

        stage('Checkout') {
            steps {
               git url: env.GIT_URL_SSH + "/" + params.REPO, branch: params.BRANCH, credentialsId: 'gitlab_creds'
                sh 'echo $PWD'
            }
        }

        stage('Build') {
            steps {
                //sh 'printenv'
                sh 'mvn clean package -DskipTests=true'
                //sh '/usr/local/src/apache-maven-3.6.0/bin/mvn clean package'
            }
        }

        stage('Packer Build') {
            input {
                message 'Do you want to continue to build Release AMI?'
                id 'APPROVER'
                ok 'Yes Proceed!'
                submitter ''
                submitterParameter 'Approved By'
                parameters {
                    string defaultValue: '', description: '', name: 'Approved By', trim: true
                }
            }
            steps {
                // sh 'packer build -var aws_access_key=${AWS_CREDS_USR} -var aws_secret_key=${AWS_CREDS_PSW} ./packer/was.json'
                sh '''
                packer build -var ami_name=${AMI_NAME} -var war_name=${WAR_NAME} ./packer/was.json
                '''
            }
        }
    }
}