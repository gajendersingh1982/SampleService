#!/usr/bin/env groovy

pipeline {
    agent any
        options { 
        timestamps()
        disableConcurrentBuilds()
        buildDiscarder logRotator(artifactNumToKeepStr: '', numToKeepStr: '10')
    }
    parameters {
        string defaultValue: 'Service', description: 'Repository Name', name: 'REPO', trim: true
        string defaultValue: 'master', description: 'Branch For Checkout', name: 'BRANCH', trim: true
        booleanParam defaultValue: false, description: 'Select if you want to delete infra', name: 'DESTROY'
        string defaultValue: 'tf-virginia-stg-bixby-was*', description: 'Name of AMI to deploy', name: 'AMI_NAME', trim: true
    }
    environment {
        GIT_URL = "https://github.com/gajendersingh1982"
        AWS_CREDS = credentials('AWS_badgedev')
        AWS_DEFAULT_REGION="us-east-1"
        AWS_ACCESS_KEY_ID="${AWS_CREDS_USR}"
        AWS_SECRET_ACCESS_KEY="${AWS_CREDS_PSW}"
    }
    stages {
        stage('Cleanup') {
            steps {
                cleanWs()
            }
        }
        
        stage('Checkout') {
            steps {
                git url: env.GIT_URL + "/" + params.REPO + "/", branch: params.BRANCH, credentialsId: env.GIT_CREDENTIALS_ID
                sh 'echo $PWD'
            }
        } 
        
        stage('Init') {
            steps {
                sh '''
                cd ./service
                echo $PWD
                terraform init -backend-config="key=bixby/stg/us-east-1/service/terraform.tfstate" -reconfigure
                '''
            }
        }
        
        stage('Plan') {
            steps {
                script {
                    if (params.DESTROY == false) {
                        stage ('Plan1'){
                            sh '''
                            echo $PWD
                            cd ./service-constant
                            echo $PWD
                            terraform plan -var-file=./env/bixbystg.tfvars -var="was_ami_name=${AMI_NAME}"
                            '''
                        }
                    }
                    else{
                        stage ('Plan Destroy') {
                            sh '''
                            echo $PWD
                            cd ./service-constant
                            echo $PWD
                            terraform plan -destroy -var-file=./env/bixbystg.tfvars -var="was_ami_name=${AMI_NAME}"
                            '''
                        }
                    }                    
                }
            }
        } 
        
        stage('Apply') {
            when {
                expression {
                    params.DESTROY == false
                }
                beforeInput true
            }
            input {
                message "Review plan and continue to change Infra?"
                ok "Yes, we should."
                submitter "gajender,singh"
                parameters {
                    string(name: 'PERSON', defaultValue: 'Branch For Checkout', description: 'Continue to apply the chnages')
                }
            }
            steps {
                sh '''
                echo $PWD
                cd ./service
                terraform apply -auto-approve -var-file=./env/bixbystg.tfvars -var="was_ami_name=${AMI_NAME}"
                '''
            }
        }

        stage('Destroy') {
            when {
                expression {
                    params.DESTROY == true
                }
                beforeInput true
            }
            input {
                message "You are about to destroy Infra?"
                ok "Yes, Pocceed."
                submitter "gajender,singh"
                parameters {
                    string(name: 'PERSON', defaultValue: 'Branch For Checkout', description: 'Continue to apply the chnages')
                }
            }
            steps {
                sh '''
                echo $PWD
                cd ./service
                terraform destroy -auto-approve -var-file=./env/bixbystg.tfvars -var="was_ami_name=${AMI_NAME}"
                '''
            }
    }
}